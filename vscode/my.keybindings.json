// Overwrite key bindings by placing them into your key bindings file.
[
{ "key": "escape",                "command": "closeReferenceSearchEditor",
                                     "when": "editorFocus && inReferenceSearchEditor" },
{ "key": "escape",                "command": "cancelSelection",
                                     "when": "editorTextFocus && editorHasSelection" },
{ "key": "ctrl+end",              "command": "cursorBottom",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+end",        "command": "cursorBottomSelect",
                                     "when": "editorTextFocus" },
{ "key": "down",                  "command": "cursorDown",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+down",       "command": "cursorDownSelect",
                                     "when": "editorTextFocus" },
{ "key": "shift+down",            "command": "cursorDownSelect",
                                     "when": "editorTextFocus" },
{ "key": "end",                   "command": "cursorEnd",
                                     "when": "editorTextFocus" },
{ "key": "alt+e",                 "command": "cursorEnd",
                                     "when": "editorTextFocus" },
{ "key": "shift+end",             "command": "cursorEndSelect",
                                     "when": "editorTextFocus" },
{ "key": "home",                  "command": "cursorHome",
                                     "when": "editorTextFocus" },
{ "key": "alt+a",                 "command": "cursorHome",
                                     "when": "editorTextFocus" },
{ "key": "alt+f",                 "command": "cursorWordRight",
                                     "when": "editorTextFocus" },
{ "key": "alt+b",                 "command": "cursorWordLeft",
                                     "when": "editorTextFocus" },
{ "key": "shift+home",            "command": "cursorHomeSelect",
                                     "when": "editorTextFocus" },
{ "key": "left",                  "command": "cursorLeft",
                                     "when": "editorTextFocus" },
{ "key": "shift+left",            "command": "cursorLeftSelect",
                                     "when": "editorTextFocus" },
{ "key": "pagedown",              "command": "cursorPageDown",
                                     "when": "editorTextFocus" },
{ "key": "shift+pagedown",        "command": "cursorPageDownSelect",
                                     "when": "editorTextFocus" },
{ "key": "pageup",                "command": "cursorPageUp",
                                     "when": "editorTextFocus" },
{ "key": "shift+pageup",          "command": "cursorPageUpSelect",
                                     "when": "editorTextFocus" },
{ "key": "right",                 "command": "cursorRight",
                                     "when": "editorTextFocus" },
{ "key": "shift+right",           "command": "cursorRightSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+home",             "command": "cursorTop",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+home",       "command": "cursorTopSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+u",                "command": "cursorUndo",
                                     "when": "editorTextFocus" },
{ "key": "up",                    "command": "cursorUp",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+up",         "command": "cursorUpSelect",
                                     "when": "editorTextFocus" },
{ "key": "shift+up",              "command": "cursorUpSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+left",             "command": "cursorWordLeft",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+left",       "command": "cursorWordLeftSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+right",            "command": "cursorWordRight",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+right",      "command": "cursorWordRightSelect",
                                     "when": "editorTextFocus" },
{ "key": "shift+backspace",       "command": "deleteLeft",
                                     "when": "editorTextFocus" },
{ "key": "backspace",             "command": "deleteLeft",
                                     "when": "editorTextFocus" },
{ "key": "delete",                "command": "deleteRight",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+backspace",        "command": "deleteWordLeft",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+delete",           "command": "deleteWordRight",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+a",                "command": "editor.action.selectAll" },
{ "key": "shift+tab",             "command": "outdent",
                                     "when": "editorTextFocus && !editorTabMovesFocus" },
{ "key": "ctrl+shift+z",          "command": "redo",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+y",                "command": "redo",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "tab",
                                     "when": "editorTextFocus && !editorTabMovesFocus" },
{ "key": "ctrl+z",                "command": "undo",
                                     "when": "editorTextFocus" },
{ "key": "escape",                "command": "removeSecondaryCursors",
                                     "when": "editorTextFocus && editorHasMultipleSelections" },
{ "key": "ctrl+f3",               "command": "actions.find" },
{ "key": "ctrl+f",                "command": "actions.find" },
{ "key": "ctrl+f",                "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "ctrl+k ctrl+c",         "command": "editor.action.addCommentLine",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+d",                "command": "editor.action.addSelectionToNextFindMatch",
                                     "when": "editorFocus" },
{ "key": "shift+alt+a",           "command": "editor.action.blockComment",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+f2",               "command": "editor.action.changeAll",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+insert",           "command": "editor.action.clipboardCopyAction" },
{ "key": "ctrl+c",                "command": "editor.action.clipboardCopyAction" },
{ "key": "shift+delete",          "command": "editor.action.clipboardCutAction" },
{ "key": "ctrl+x",                "command": "editor.action.clipboardCutAction" },
{ "key": "shift+insert",          "command": "editor.action.clipboardPasteAction" },
{ "key": "ctrl+v",                "command": "editor.action.clipboardPasteAction" },
{ "key": "ctrl+/",                "command": "editor.action.commentLine",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+down",        "command": "editor.action.copyLinesDownAction",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+up",          "command": "editor.action.copyLinesUpAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+k",          "command": "editor.action.deleteLines",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+f",           "command": "editor.action.format",
                                     "when": "editorTextFocus" },
{ "key": "f12",                   "command": "editor.action.goToDeclaration",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+.",          "command": "editor.action.inPlaceReplace.down",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+,",          "command": "editor.action.inPlaceReplace.up",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+]",                "command": "editor.action.indentLines",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+alt+up",           "command": "editor.action.insertCursorAbove",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+alt+down",         "command": "editor.action.insertCursorBelow",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+enter",            "command": "editor.action.insertLineAfter",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+enter",      "command": "editor.action.insertLineBefore",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+]",          "command": "editor.action.jumpToBracket",
                                     "when": "editorTextFocus" },
{ "key": "f8",                    "command": "editor.action.marker.next",
                                     "when": "editorFocus" },
{ "key": "shift+f8",              "command": "editor.action.marker.prev",
                                     "when": "editorFocus" },
{ "key": "alt+down",              "command": "editor.action.moveLinesDownAction",
                                     "when": "editorTextFocus" },
{ "key": "alt+up",                "command": "editor.action.moveLinesUpAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+d",         "command": "editor.action.moveSelectionToNextFindMatch",
                                     "when": "editorFocus" },
{ "key": "f3",                    "command": "editor.action.nextMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "alt+f3",                "command": "editor.action.nextSelectionMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "ctrl+[",                "command": "editor.action.outdentLines",
                                     "when": "editorTextFocus" },
{ "key": "alt+f12",               "command": "editor.action.previewDeclaration",
                                     "when": "editorTextFocus" },
{ "key": "shift+f3",              "command": "editor.action.previousMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "ctrl+.",                "command": "editor.action.quickFix",
                                     "when": "editorTextFocus" },
{ "key": "shift+f12",             "command": "editor.action.referenceSearch.trigger",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+u",         "command": "editor.action.removeCommentLine",
                                     "when": "editorTextFocus" },
{ "key": "f2",                    "command": "editor.action.rename",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+l",          "command": "editor.action.selectHighlights",
                                     "when": "editorFocus" },
{ "key": "shift+f10",             "command": "editor.action.showContextMenu",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+right",       "command": "editor.action.smartSelect.grow",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+left",        "command": "editor.action.smartSelect.shrink",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+h",                "command": "editor.action.startFindReplaceAction" },
{ "key": "ctrl+m",                "command": "editor.action.toggleTabFocusMode",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+space",      "command": "editor.action.triggerParameterHints",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+space",            "command": "editor.action.triggerSuggest",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+x",          "command": "editor.action.trimTrailingWhitespace",
                                     "when": "editorTextFocus" },
{ "key": "f9",                    "command": "editor.debug.action.toggleBreakpoint",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "editor.emmet.action.expandAbbreviation",
                                     "when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections && !editorTabMovesFocus" },
{ "key": "escape",                "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "enter",                 "command": "acceptSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "tab",                   "command": "jumpToNextSnippetPlaceholder",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "shift+tab",             "command": "jumpToPrevSnippetPlaceholder",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "escape",                "command": "leaveChangeAllMode",
                                     "when": "editorTextFocus && inChangeAllMode" },
{ "key": "enter",                 "command": "leaveChangeAllMode",
                                     "when": "editorTextFocus && inChangeAllMode" },
{ "key": "escape",                "command": "leaveSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "escape",                "command": "closeMarkersNavigation",
                                     "when": "editorFocus && markersNavigationVisible" },
{ "key": "escape",                "command": "closeReferenceSearch",
                                     "when": "editorFocus && referenceSearchVisible" },
{ "key": "escape",                "command": "closeParameterHints",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "down",                  "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "up",                    "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "tab",                   "command": "acceptQuickFixSuggestion",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "enter",                 "command": "acceptQuickFixSuggestion",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "escape",                "command": "closeQuickFixWidget",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "pagedown",              "command": "selectNextPageQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "down",                  "command": "selectNextQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "pageup",                "command": "selectPrevPageQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "up",                    "command": "selectPrevQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "tab",                   "command": "acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "enter",                 "command": "acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "escape",                "command": "hideSuggestWidget",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "pagedown",              "command": "selectNextPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "down",                  "command": "selectNextSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "pageup",                "command": "selectPrevPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "up",                    "command": "selectPrevSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "enter",                 "command": "acceptRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "escape",                "command": "cancelRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "ctrl+w",                "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+f4",               "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+k f",              "command": "workbench.action.closeFolder" },
{ "key": "escape",                "command": "workbench.action.closeMessages",
                                     "when": "globalMessageVisible" },
// { "key": "ctrl+shift+w",          "command": "workbench.action.closeWindow" },
// { "key": "ctrl+`",                "command": "workbench.action.cycleEditor" },
{ "key": "f5",                    "command": "workbench.action.debug.continue",
                                     "when": "inDebugMode" },
{ "key": "f5",                    "command": "workbench.action.debug.start",
                                     "when": "!inDebugMode" },
{ "key": "shift+f11",             "command": "workbench.action.debug.stepOut",
                                     "when": "inDebugMode" },
{ "key": "f10",                   "command": "workbench.action.debug.stepOver",
                                     "when": "inDebugMode" },
{ "key": "shift+f5",              "command": "workbench.action.debug.stop",
                                     "when": "inDebugMode" },
{ "key": "ctrl+k m",              "command": "workbench.action.editor.changeLanguageMode" },
{ "key": "ctrl+k p",              "command": "workbench.action.files.copyPathOfActiveFile" },
{ "key": "ctrl+o",                "command": "workbench.action.files.openFile" },
{ "key": "ctrl+k r",              "command": "workbench.action.files.revealActiveFileInWindows" },
{ "key": "ctrl+s",                "command": "workbench.action.files.save" },
{ "key": "ctrl+shift+s",          "command": "workbench.action.files.saveAs" },
{ "key": "ctrl+k o",              "command": "workbench.action.files.showOpenedFileInNewWindow" },
{ "key": "ctrl+1",                "command": "workbench.action.focusFirstEditor" },
// { "key": "ctrl+alt+left",         "command": "workbench.action.focusLeftEditor" },
{ "key": "alt+h",                 "command": "workbench.action.focusLeftEditor" },
// { "key": "ctrl+alt+right",        "command": "workbench.action.focusRightEditor" },
{ "key": "alt+l",                 "command": "workbench.action.focusRightEditor" },
{ "key": "ctrl+2",                "command": "workbench.action.focusSecondEditor" },
{ "key": "ctrl+0",                "command": "workbench.action.focusSideBar" },
{ "key": "ctrl+3",                "command": "workbench.action.focusThirdEditor" },
{ "key": "ctrl+g",                "command": "workbench.action.gotoLine" },
{ "key": "ctrl+shift+o",          "command": "workbench.action.gotoSymbol" },
{ "key": "ctrl+r",                "command": "workbench.action.gotoSymbol" },
{ "key": "ctrl+k v",              "command": "workbench.action.markdown.openPreviewSideBySide" },
{ "key": "ctrl+shift+v",          "command": "workbench.action.markdown.togglePreview" },
{ "key": "ctrl+k left",           "command": "workbench.action.moveActiveEditorLeft" },
{ "key": "ctrl+k right",          "command": "workbench.action.moveActiveEditorRight" },
{ "key": "alt+left",              "command": "workbench.action.navigateBack" },
{ "key": "alt+right",             "command": "workbench.action.navigateForward" },
{ "key": "ctrl+shift+n",          "command": "workbench.action.newWindow" },
{ "key": "ctrl+shift+tab",        "command": "workbench.action.openPreviousEditor" },
{ "key": "ctrl+tab",              "command": "workbench.action.openPreviousEditor" },
{ "key": "ctrl+shift+u",          "command": "workbench.action.output.toggleOutput" },
{ "key": "ctrl+e",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+tab",              "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+e",                "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+j",          "command": "workbench.action.search.toggleQueryDetails",
                                     "when": "searchViewletVisible" },
{ "key": "ctrl+t",                "command": "workbench.action.showAllSymbols" },
{ "key": "f1",                    "command": "workbench.action.showCommands" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.showCommands" },
{ "key": "ctrl+shift+m",          "command": "workbench.action.showErrorsWarnings" },
{ "key": "ctrl+\\",               "command": "workbench.action.splitEditor" },
{ "key": "ctrl+shift+b",          "command": "workbench.action.tasks.build" },
{ "key": "ctrl+shift+t",          "command": "workbench.action.tasks.test" },
{ "key": "ctrl+shift+c",          "command": "workbench.action.terminal.openNativeConsole" },
{ "key": "f11",                   "command": "workbench.action.toggleFullScreen" },
{ "key": "ctrl+b",                "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+j",                "command": "workbench.action.togglePanel" },
{ "key": "ctrl+=",                "command": "workbench.action.zoomIn" },
{ "key": "ctrl+-",                "command": "workbench.action.zoomOut" },
{ "key": "ctrl+k enter",          "command": "workbench.files.action.addToWorkingFiles" },
{ "key": "ctrl+k ctrl+w",         "command": "workbench.files.action.closeAllFiles" },
{ "key": "ctrl+k w",              "command": "workbench.files.action.closeFile" },
{ "key": "ctrl+k down",           "command": "workbench.files.action.openNextWorkingFile" },
{ "key": "ctrl+k up",             "command": "workbench.files.action.openPreviousWorkingFile" },
{ "key": "alt+j",                 "command": "workbench.files.action.openNextWorkingFile" },
{ "key": "alt+k",                 "command": "workbench.files.action.openPreviousWorkingFile" },
{ "key": "ctrl+shift+d",          "command": "workbench.view.debug" },
{ "key": "ctrl+shift+e",          "command": "workbench.view.explorer" },
{ "key": "ctrl+shift+g",          "command": "workbench.view.git" },
{ "key": "ctrl+shift+f",          "command": "workbench.view.search" },
{ "key": "f11",                   "command": "workbench.action.debug.stepInto",
                                     "when": "inDebugMode" },
{ "key": "ctrl+shift+tab",        "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+e",          "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": ".",                     "command": "^acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && editorLangId == 'typescript' && suggestionSupportsAcceptOnKey" },
{ "key": "ctrl+`",                "command": "workbench.action.terminal.toggleTerminal" },
{ "key": "cmd+l l",               "command": "o.showOutput" },
{ "key": "cmd+l shift+r",         "command": "o.execute" },
{ "key": "cmd+l r",               "command": "o.execute-last-command" },
{ "key": "ctrl+l",                "command": "expandLineSelection" },
{ "key": "alt+-",            "command": "workbench.action.navigateBack" },
{ "key": "alt+=",            "command": "workbench.action.navigateForward" },
{ "key": "shift+0",               "command": "^acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && editorLangId == 'csharp' && suggestionSupportsAcceptOnKey" },
{ "key": "shift+9",               "command": "^acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && editorLangId == 'csharp' && suggestionSupportsAcceptOnKey" },
{ "key": ".",                     "command": "^acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && editorLangId == 'csharp' && suggestionSupportsAcceptOnKey" }
]


// Here are other available commands:
// - deleteAllLeft
// - deleteAllRight
// - lineBreakInsert
// - editor.action.openLink
// - editor.action.findReferences
// - editor.action.showReferences
// - editor.action.goToTypeDeclaration
// - workbench.action.toggleSidebarPosition
// - workbench.action.closeAllEditors
// - workbench.action.closeOtherEditors
// - workbench.action.evenEditorWidths
// - workbench.action.minimizeOtherEditors
// - workbench.action.openGlobalSettings
// - workbench.action.openGlobalKeybindings
// - workbench.action.openWorkspaceSettings
// - workbench.action.editor.changeEOL
// - workbench.action.editor.changeEncoding
// - workbench.action.files.saveAll
// - workbench.action.files.saveFiles
// - workbench.action.files.revert
// - workbench.action.files.newFolder
// - workbench.files.action.compareFileWith
// - workbench.git.action.globalOpenChange
// - workbench.action.markdown.showWelcome
// - workbench.action.output.showOutput
// - editor.action.clearoutput
// - workbench.action.tasks.terminate
// - workbench.action.tasks.configureTaskRunner
// - workbench.action.tasks.showLog
// - workbench.action.tasks.runTask
// - workbench.action.openSnippets
// - workbench.action.selectTheme
// - editor.debug.action.selectionToRepl
// - editor.debug.action.selectionToWatch
// - editor.debug.action.runToCursor
// - workbench.action.debug.restart
// - workbench.action.debug.pause
// - workbench.action.debug.configure
// - workbench.debug.action.openRepl
// - workbench.action.files.openFolder
// - workbench.action.git.executeGitCommands
// - workbench.action.openRecent
// - workbench.action.toggleDevTools
// - workbench.action.zoomReset
// - workbench.action.appPerf
// - workbench.action.reloadWindow
// - workbench.action.files.toggleAutoSave
// - workbench.extensions.action.listExtensions
// - workbench.extensions.action.installExtension
// - vscode.executeWorkspaceSymbolProvider
// - vscode.executeDefinitionProvider
// - vscode.executeHoverProvider
// - vscode.executeDocumentHighlights
// - vscode.executeReferenceProvider
// - vscode.executeCodeActionProvider
// - vscode.executeCodeLensProvider
// - vscode.executeDocumentSymbolProvider
// - vscode.executeDocumentRenameProvider
// - vscode.executeFormatDocumentProvider
// - vscode.executeFormatRangeProvider
// - vscode.executeFormatOnTypeProvider
// - vscode.executeSignatureHelpProvider
// - vscode.executeCompletionItemProvider
