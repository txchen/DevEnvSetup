[
{ "key": "alt+e",                 "command": "cursorEnd",
                                     "when": "editorTextFocus" },
{ "key": "alt+shift+e",           "command": "cursorEndSelect",
                                     "when": "editorTextFocus" },
{ "key": "alt+a",                 "command": "cursorHome",
                                     "when": "editorTextFocus" },
{ "key": "alt+shift+a",           "command": "cursorHomeSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+w",          "command": "workbench.action.reopenClosedEditor" },
{ "key": "alt+f",                 "command": "cursorWordRight",
                                     "when": "editorTextFocus" },
{ "key": "alt+b",                 "command": "cursorWordLeft",
                                     "when": "editorTextFocus" },
{ "key": "alt+f3",                "command": "editor.action.nextSelectionMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "ctrl+l",                "command": "expandLineSelection",
                                     "when": "editorTextFocus" },
{ "key": "alt+l",                 "command": "workbench.action.nextEditorInGroup" },
{ "key": "alt+h",                 "command": "workbench.action.previousEditorInGroup" },
{ "key": "alt+j",                 "command": "workbench.action.navigateRight" },
{ "key": "alt+k",                 "command": "workbench.action.navigateLeft" },
{ "key": "ctrl+f",                "command": "actions.find" },
{ "key": "ctrl+f",                "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "alt+d",                 "command": "cursorPageDown",
                                     "when": "editorTextFocus" },
{ "key": "alt+u",                 "command": "cursorPageUp",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+r",                "command": "workbench.action.gotoSymbol" },


{ "key": "escape escape",         "command": "workbench.action.exitZenMode",
                                     "when": "inZenMode" },
{ "key": "shift+escape",          "command": "closeReferenceSearchEditor",
                                     "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
{ "key": "escape",                "command": "closeReferenceSearchEditor",
                                     "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
{ "key": "shift+escape",          "command": "cancelSelection",
                                     "when": "editorHasSelection && editorTextFocus" },
{ "key": "escape",                "command": "cancelSelection",
                                     "when": "editorHasSelection && editorTextFocus" },
{ "key": "ctrl+end",              "command": "cursorBottom",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+end",        "command": "cursorBottomSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+down",   "command": "cursorColumnSelectDown",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+left",   "command": "cursorColumnSelectLeft",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+pagedown", "command": "cursorColumnSelectPageDown",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+pageup", "command": "cursorColumnSelectPageUp",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+right",  "command": "cursorColumnSelectRight",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+up",     "command": "cursorColumnSelectUp",
                                     "when": "editorTextFocus" },
{ "key": "down",                  "command": "cursorDown",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+down",       "command": "cursorDownSelect",
                                     "when": "editorTextFocus" },
{ "key": "shift+down",            "command": "cursorDownSelect",
                                     "when": "editorTextFocus" },
{ "key": "end",                   "command": "cursorEnd",
                                     "when": "editorTextFocus" },
{ "key": "shift+end",             "command": "cursorEndSelect",
                                     "when": "editorTextFocus" },
{ "key": "home",                  "command": "cursorHome",
                                     "when": "editorTextFocus" },
{ "key": "shift+home",            "command": "cursorHomeSelect",
                                     "when": "editorTextFocus" },
{ "key": "left",                  "command": "cursorLeft",
                                     "when": "editorTextFocus" },
{ "key": "shift+left",            "command": "cursorLeftSelect",
                                     "when": "editorTextFocus" },
{ "key": "pagedown",              "command": "cursorPageDown",
                                     "when": "editorTextFocus" },
{ "key": "shift+pagedown",        "command": "cursorPageDownSelect",
                                     "when": "editorTextFocus" },
{ "key": "pageup",                "command": "cursorPageUp",
                                     "when": "editorTextFocus" },
{ "key": "shift+pageup",          "command": "cursorPageUpSelect",
                                     "when": "editorTextFocus" },
{ "key": "right",                 "command": "cursorRight",
                                     "when": "editorTextFocus" },
{ "key": "shift+right",           "command": "cursorRightSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+home",             "command": "cursorTop",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+home",       "command": "cursorTopSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+u",                "command": "cursorUndo",
                                     "when": "editorTextFocus" },
{ "key": "up",                    "command": "cursorUp",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+up",         "command": "cursorUpSelect",
                                     "when": "editorTextFocus" },
{ "key": "shift+up",              "command": "cursorUpSelect",
                                     "when": "editorTextFocus" },
{ "key": "shift+backspace",       "command": "deleteLeft",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "backspace",             "command": "deleteLeft",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "delete",                "command": "deleteRight",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+a",                "command": "editor.action.selectAll" },
// { "key": "ctrl+i",                "command": "expandLineSelection",
//                                      "when": "editorTextFocus" },
{ "key": "shift+tab",             "command": "outdent",
                                     "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
{ "key": "ctrl+shift+z",          "command": "redo",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+y",                "command": "redo",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+down",             "command": "scrollLineDown",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+up",               "command": "scrollLineUp",
                                     "when": "editorTextFocus" },
{ "key": "alt+pagedown",          "command": "scrollPageDown",
                                     "when": "editorTextFocus" },
{ "key": "alt+pageup",            "command": "scrollPageUp",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "tab",
                                     "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
{ "key": "ctrl+z",                "command": "undo",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+escape",          "command": "removeSecondaryCursors",
                                     "when": "editorHasMultipleSelections && editorTextFocus" },
{ "key": "escape",                "command": "removeSecondaryCursors",
                                     "when": "editorHasMultipleSelections && editorTextFocus" },
{ "key": "right",                 "command": "repl.action.acceptSuggestion",
                                     "when": "editorTextFocus && inDebugRepl && suggestWidgetVisible" },
{ "key": "down",                  "command": "repl.action.historyNext",
                                     "when": "editorTextFocus && inDebugRepl && onLastDebugReplLine" },
{ "key": "up",                    "command": "repl.action.historyPrevious",
                                     "when": "editorTextFocus && inDebugRepl && onFirsteDebugReplLine" },
{ "key": "ctrl+right",            "command": "cursorWordEndRight",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+right",      "command": "cursorWordEndRightSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+left",             "command": "cursorWordStartLeft",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+left",       "command": "cursorWordStartLeftSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+backspace",        "command": "deleteWordLeft",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+delete",           "command": "deleteWordRight",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+k ctrl+c",         "command": "editor.action.addCommentLine",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+d",                "command": "editor.action.addSelectionToNextFindMatch",
                                     "when": "editorFocus" },
// { "key": "shift+alt+a",           "command": "editor.action.blockComment",
//                                      "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+f2",               "command": "editor.action.changeAll",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+insert",           "command": "editor.action.clipboardCopyAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+c",                "command": "editor.action.clipboardCopyAction",
                                     "when": "editorTextFocus" },
{ "key": "shift+delete",          "command": "editor.action.clipboardCutAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+x",                "command": "editor.action.clipboardCutAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+insert",          "command": "editor.action.clipboardPasteAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+v",                "command": "editor.action.clipboardPasteAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+/",                "command": "editor.action.commentLine",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+alt+down",        "command": "editor.action.copyLinesDownAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+alt+up",          "command": "editor.action.copyLinesUpAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+k ctrl+k",         "command": "editor.action.defineKeybinding",
                                     "when": "editorTextFocus && !editorReadonly && editorLangId == 'json'" },
{ "key": "ctrl+shift+k",          "command": "editor.action.deleteLines",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+alt+f",           "command": "editor.action.formatDocument",
                                     "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly" },
{ "key": "ctrl+k ctrl+f",         "command": "editor.action.formatSelection",
                                     "when": "editorHasDocumentSelectionFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly" },
{ "key": "f12",                   "command": "editor.action.goToDeclaration",
                                     "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "ctrl+f12",              "command": "editor.action.goToImplementation",
                                     "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "ctrl+shift+.",          "command": "editor.action.inPlaceReplace.down",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+,",          "command": "editor.action.inPlaceReplace.up",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+]",                "command": "editor.action.indentLines",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+alt+up",           "command": "editor.action.insertCursorAbove",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+i",           "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+alt+down",         "command": "editor.action.insertCursorBelow",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+enter",            "command": "editor.action.insertLineAfter",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+enter",      "command": "editor.action.insertLineBefore",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+\\",         "command": "editor.action.jumpToBracket",
                                     "when": "editorTextFocus" },
{ "key": "f8",                    "command": "editor.action.marker.next",
                                     "when": "editorFocus && !editorReadonly" },
{ "key": "shift+f8",              "command": "editor.action.marker.prev",
                                     "when": "editorFocus && !editorReadonly" },
{ "key": "alt+down",              "command": "editor.action.moveLinesDownAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "alt+up",                "command": "editor.action.moveLinesUpAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+k ctrl+d",         "command": "editor.action.moveSelectionToNextFindMatch",
                                     "when": "editorFocus" },
{ "key": "f3",                    "command": "editor.action.nextMatchFindAction",
                                     "when": "editorFocus" },
// { "key": "ctrl+f3",               "command": "editor.action.nextSelectionMatchFindAction",
//                                      "when": "editorFocus" },
{ "key": "ctrl+k f12",            "command": "editor.action.openDeclarationToTheSide",
                                     "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "ctrl+[",                "command": "editor.action.outdentLines",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+f12",        "command": "editor.action.peekImplementation",
                                     "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "alt+f12",               "command": "editor.action.previewDeclaration",
                                     "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
{ "key": "shift+f3",              "command": "editor.action.previousMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "ctrl+shift+f3",         "command": "editor.action.previousSelectionMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "ctrl+.",                "command": "editor.action.quickFix",
                                     "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
{ "key": "shift+f12",             "command": "editor.action.referenceSearch.trigger",
                                     "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
{ "key": "ctrl+k ctrl+u",         "command": "editor.action.removeCommentLine",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "f2",                    "command": "editor.action.rename",
                                     "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+l",          "command": "editor.action.selectHighlights",
                                     "when": "editorFocus" },
{ "key": "alt+f1",                "command": "editor.action.showAccessibilityHelp",
                                     "when": "editorFocus" },
{ "key": "shift+f10",             "command": "editor.action.showContextMenu",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+i",         "command": "editor.action.showHover",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+right",       "command": "editor.action.smartSelect.grow",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+left",        "command": "editor.action.smartSelect.shrink",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+h",                "command": "editor.action.startFindReplaceAction" },
{ "key": "ctrl+m",                "command": "editor.action.toggleTabFocusMode" },
{ "key": "alt+z",                 "command": "editor.action.toggleWordWrap" },
{ "key": "ctrl+shift+space",      "command": "editor.action.triggerParameterHints",
                                     "when": "editorHasSignatureHelpProvider && editorTextFocus" },
{ "key": "ctrl+space",            "command": "editor.action.triggerSuggest",
                                     "when": "editorHasCompletionItemProvider && editorTextFocus && !editorReadonly" },
{ "key": "ctrl+k ctrl+x",         "command": "editor.action.trimTrailingWhitespace",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+k ctrl+i",         "command": "editor.debug.action.showDebugHover",
                                     "when": "editorTextFocus && inDebugMode" },
{ "key": "f9",                    "command": "editor.debug.action.toggleBreakpoint",
                                     "when": "editorTextFocus" },
{ "key": "shift+f9",              "command": "editor.debug.action.toggleColumnBreakpoint",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "editor.emmet.action.expandAbbreviation",
                                     "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorHasMultipleSelections && !editorHasSelection && !editorReadonly && !editorTabMovesFocus" },
{ "key": "ctrl+shift+[",          "command": "editor.fold",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+0",         "command": "editor.foldAll",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+1",         "command": "editor.foldLevel1",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+2",         "command": "editor.foldLevel2",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+3",         "command": "editor.foldLevel3",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+4",         "command": "editor.foldLevel4",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+5",         "command": "editor.foldLevel5",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+6",         "command": "editor.foldLevel6",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+7",         "command": "editor.foldLevel7",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+8",         "command": "editor.foldLevel8",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+9",         "command": "editor.foldLevel9",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+[",         "command": "editor.foldRecursively",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+]",          "command": "editor.unfold",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+j",         "command": "editor.unfoldAll",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+k ctrl+]",         "command": "editor.unfoldRecursively",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "insertSnippet",
                                     "when": "config.editor.tabCompletion && editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode" },
{ "key": "enter",                 "command": "repl.action.acceptInput",
                                     "when": "editorTextFocus && inDebugRepl" },
{ "key": "ctrl+f",                "command": "settings.action.search",
                                     "when": "inSettingsEditor" },
{ "key": "shift+escape",          "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "escape",                "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "ctrl+alt+enter",        "command": "editor.action.replaceAll",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "ctrl+shift+1",          "command": "editor.action.replaceOne",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "alt+enter",             "command": "editor.action.selectAllMatches",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "alt+down",              "command": "find.history.showNext",
                                     "when": "editorFocus && findInputFocussed && findWidgetVisible" },
{ "key": "alt+up",                "command": "find.history.showPrevious",
                                     "when": "editorFocus && findInputFocussed && findWidgetVisible" },
{ "key": "alt+c",                 "command": "toggleFindCaseSensitive",
                                     "when": "editorFocus" },
{ "key": "alt+r",                 "command": "toggleFindRegex",
                                     "when": "editorFocus" },
{ "key": "alt+w",                 "command": "toggleFindWholeWord",
                                     "when": "editorFocus" },
{ "key": "shift+escape",          "command": "closeBreakpointWidget",
                                     "when": "breakpointWidgetVisible && editorFocus" },
{ "key": "escape",                "command": "closeBreakpointWidget",
                                     "when": "breakpointWidgetVisible && editorFocus" },
{ "key": "enter",                 "command": "acceptSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "tab",                   "command": "jumpToNextSnippetPlaceholder",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "shift+tab",             "command": "jumpToPrevSnippetPlaceholder",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "escape",                "command": "leaveEditorMessage",
                                     "when": "messageVisible" },
{ "key": "shift+escape",          "command": "leaveSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "escape",                "command": "leaveSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "shift+escape",          "command": "closeMarkersNavigation",
                                     "when": "editorFocus && markersNavigationVisible" },
{ "key": "escape",                "command": "closeMarkersNavigation",
                                     "when": "editorFocus && markersNavigationVisible" },
{ "key": "shift+escape",          "command": "closeReferenceSearch",
                                     "when": "referenceSearchVisible && !config.editor.stablePeek" },
{ "key": "escape",                "command": "closeReferenceSearch",
                                     "when": "referenceSearchVisible && !config.editor.stablePeek" },
{ "key": "shift+escape",          "command": "closeParameterHints",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "escape",                "command": "closeParameterHints",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "alt+down",              "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "down",                  "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "alt+up",                "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "up",                    "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "tab",                   "command": "acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "enter",                 "command": "acceptSelectedSuggestionOnEnter",
                                     "when": "acceptSuggestionOnEnter && editorTextFocus && suggestWidgetVisible" },
{ "key": "shift+escape",          "command": "hideSuggestWidget",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "escape",                "command": "hideSuggestWidget",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "alt+pagedown",          "command": "selectNextPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "pagedown",              "command": "selectNextPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "alt+down",              "command": "selectNextSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "down",                  "command": "selectNextSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "alt+pageup",            "command": "selectPrevPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "pageup",                "command": "selectPrevPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "alt+up",                "command": "selectPrevSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "up",                    "command": "selectPrevSuggestion",
                                     "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
{ "key": "ctrl+space",            "command": "toggleSuggestionDetails",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "enter",                 "command": "acceptRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "shift+escape",          "command": "cancelRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "escape",                "command": "cancelRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "shift+escape",          "command": "closeAccessibilityHelp",
                                     "when": "accessibilityHelpWidgetVisible && editorFocus" },
{ "key": "escape",                "command": "closeAccessibilityHelp",
                                     "when": "accessibilityHelpWidgetVisible && editorFocus" },
{ "key": "escape",                "command": "closeReplaceInFilesWidget",
                                     "when": "replaceInputBoxFocus && searchViewletVisible" },
{ "key": "delete",                "command": "debug.removeBreakpoint",
                                     "when": "breakpointsFocused" },
{ "key": "delete",                "command": "debug.removeWatchExpression",
                                     "when": "watchExpressionsFocused" },
{ "key": "ctrl+c",                "command": "keybindings.editor.copyKeybindingEntry",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "ctrl+k ctrl+k",         "command": "keybindings.editor.defineKeybinding",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "delete",                "command": "keybindings.editor.removeKeybinding",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "ctrl+f",                "command": "keybindings.editor.searchKeybindings",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "escape",                "command": "list.clear",
                                     "when": "listFocus" },
{ "key": "left",                  "command": "list.collapse",
                                     "when": "listFocus" },
{ "key": "right",                 "command": "list.expand",
                                     "when": "listFocus" },
{ "key": "down",                  "command": "list.focusDown",
                                     "when": "listFocus" },
{ "key": "home",                  "command": "list.focusFirst",
                                     "when": "listFocus" },
{ "key": "end",                   "command": "list.focusLast",
                                     "when": "listFocus" },
{ "key": "pagedown",              "command": "list.focusPageDown",
                                     "when": "listFocus" },
{ "key": "pageup",                "command": "list.focusPageUp",
                                     "when": "listFocus" },
{ "key": "up",                    "command": "list.focusUp",
                                     "when": "listFocus" },
{ "key": "ctrl+enter",            "command": "list.select",
                                     "when": "listFocus" },
{ "key": "enter",                 "command": "list.select",
                                     "when": "listFocus" },
{ "key": "space",                 "command": "list.toggleExpand",
                                     "when": "listFocus" },
{ "key": "ctrl+shift+f",          "command": "search.action.focusActiveEditor",
                                     "when": "searchInputBoxFocus && searchViewletVisible" },
{ "key": "f4",                    "command": "search.action.focusNextSearchResult" },
{ "key": "shift+f4",              "command": "search.action.focusPreviousSearchResult" },
{ "key": "ctrl+alt+enter",        "command": "search.action.replaceAll",
                                     "when": "replaceActive && searchViewletVisible && !findWidgetVisible" },
{ "key": "down",                  "command": "search.focus.nextInputBox",
                                     "when": "inputBoxFocus && searchViewletVisible" },
{ "key": "up",                    "command": "search.focus.previousInputBox",
                                     "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus" },
{ "key": "alt+down",              "command": "search.history.showNext",
                                     "when": "searchInputBoxFocus && searchViewletVisible" },
{ "key": "alt+up",                "command": "search.history.showPrevious",
                                     "when": "searchInputBoxFocus && searchViewletVisible" },
{ "key": "ctrl+shift+r",          "command": "toggleExperimentalScreenReaderSupport" },
{ "key": "alt+c",                 "command": "toggleSearchCaseSensitive",
                                     "when": "searchInputBoxFocus && searchViewletVisible" },
{ "key": "alt+r",                 "command": "toggleSearchRegex",
                                     "when": "searchInputBoxFocus && searchViewletVisible" },
{ "key": "alt+w",                 "command": "toggleSearchWholeWord",
                                     "when": "searchInputBoxFocus && searchViewletVisible" },
{ "key": "ctrl+w",                "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+f4",               "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+k ctrl+w",         "command": "workbench.action.closeAllEditors" },
{ "key": "ctrl+k w",              "command": "workbench.action.closeEditorsInGroup" },
{ "key": "ctrl+k f",              "command": "workbench.action.closeFolder" },
{ "key": "shift+escape",          "command": "workbench.action.closeMessages",
                                     "when": "globalMessageVisible" },
{ "key": "escape",                "command": "workbench.action.closeMessages",
                                     "when": "globalMessageVisible" },
{ "key": "shift+escape",          "command": "workbench.action.closeQuickOpen",
                                     "when": "inQuickOpen" },
{ "key": "escape",                "command": "workbench.action.closeQuickOpen",
                                     "when": "inQuickOpen" },
// { "key": "ctrl+w",                "command": "workbench.action.closeWindow",
//                                      "when": "!editorIsOpen" },
// { "key": "ctrl+shift+w",          "command": "workbench.action.closeWindow" },
{ "key": "f5",                    "command": "workbench.action.debug.continue",
                                     "when": "inDebugMode" },
{ "key": "f6",                    "command": "workbench.action.debug.pause",
                                     "when": "inDebugMode" },
{ "key": "ctrl+shift+f5",         "command": "workbench.action.debug.restart",
                                     "when": "inDebugMode" },
{ "key": "ctrl+f5",               "command": "workbench.action.debug.run",
                                     "when": "!inDebugMode" },
{ "key": "f5",                    "command": "workbench.action.debug.start",
                                     "when": "!inDebugMode" },
{ "key": "shift+f11",             "command": "workbench.action.debug.stepOut",
                                     "when": "inDebugMode" },
{ "key": "f10",                   "command": "workbench.action.debug.stepOver",
                                     "when": "inDebugMode" },
{ "key": "shift+f5",              "command": "workbench.action.debug.stop",
                                     "when": "inDebugMode" },
{ "key": "ctrl+k m",              "command": "workbench.action.editor.changeLanguageMode" },
{ "key": "ctrl+k p",              "command": "workbench.action.files.copyPathOfActiveFile" },
{ "key": "ctrl+n",                "command": "workbench.action.files.newUntitledFile" },
{ "key": "ctrl+o",                "command": "workbench.action.files.openFile" },
{ "key": "ctrl+k ctrl+o",         "command": "workbench.action.files.openFolder" },
{ "key": "ctrl+k r",              "command": "workbench.action.files.revealActiveFileInWindows" },
{ "key": "ctrl+s",                "command": "workbench.action.files.save" },
{ "key": "ctrl+k s",              "command": "workbench.action.files.saveAll" },
{ "key": "ctrl+shift+s",          "command": "workbench.action.files.saveAs" },
{ "key": "ctrl+k o",              "command": "workbench.action.files.showOpenedFileInNewWindow" },
{ "key": "ctrl+shift+f",          "command": "workbench.action.findInFiles",
                                     "when": "!searchInputBoxFocus" },
{ "key": "ctrl+1",                "command": "workbench.action.focusFirstEditorGroup" },
{ "key": "ctrl+k ctrl+right",     "command": "workbench.action.focusNextGroup" },
{ "key": "ctrl+k ctrl+left",      "command": "workbench.action.focusPreviousGroup" },
{ "key": "ctrl+2",                "command": "workbench.action.focusSecondEditorGroup" },
{ "key": "ctrl+0",                "command": "workbench.action.focusSideBar" },
{ "key": "ctrl+3",                "command": "workbench.action.focusThirdEditorGroup" },
{ "key": "ctrl+g",                "command": "workbench.action.gotoLine" },
{ "key": "ctrl+shift+o",          "command": "workbench.action.gotoSymbol" },
{ "key": "escape",                "command": "workbench.action.hideInterfaceOverview",
                                     "when": "interfaceOverviewVisible" },
{ "key": "down",                  "command": "workbench.action.interactivePlayground.arrowDown",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "up",                    "command": "workbench.action.interactivePlayground.arrowUp",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "pagedown",              "command": "workbench.action.interactivePlayground.pageDown",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "pageup",                "command": "workbench.action.interactivePlayground.pageUp",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "ctrl+k enter",          "command": "workbench.action.keepEditor" },
{ "key": "ctrl+k ctrl+r",         "command": "workbench.action.keybindingsReference" },
{ "key": "ctrl+k left",           "command": "workbench.action.moveActiveEditorGroupLeft" },
{ "key": "ctrl+k right",          "command": "workbench.action.moveActiveEditorGroupRight" },
{ "key": "ctrl+shift+pageup",     "command": "workbench.action.moveEditorLeftInGroup" },
{ "key": "ctrl+shift+pagedown",   "command": "workbench.action.moveEditorRightInGroup" },
{ "key": "ctrl+alt+right",        "command": "workbench.action.moveEditorToNextGroup" },
{ "key": "ctrl+alt+left",         "command": "workbench.action.moveEditorToPreviousGroup" },
{ "key": "alt+left",              "command": "workbench.action.navigateBack" },
{ "key": "alt+right",             "command": "workbench.action.navigateForward" },
{ "key": "ctrl+shift+n",          "command": "workbench.action.newWindow" },
{ "key": "ctrl+pagedown",         "command": "workbench.action.nextEditor" },
{ "key": "alt+1",                 "command": "workbench.action.openEditorAtIndex1" },
{ "key": "alt+2",                 "command": "workbench.action.openEditorAtIndex2" },
{ "key": "alt+3",                 "command": "workbench.action.openEditorAtIndex3" },
{ "key": "alt+4",                 "command": "workbench.action.openEditorAtIndex4" },
{ "key": "alt+5",                 "command": "workbench.action.openEditorAtIndex5" },
{ "key": "alt+6",                 "command": "workbench.action.openEditorAtIndex6" },
{ "key": "alt+7",                 "command": "workbench.action.openEditorAtIndex7" },
{ "key": "alt+8",                 "command": "workbench.action.openEditorAtIndex8" },
{ "key": "alt+9",                 "command": "workbench.action.openEditorAtIndex9" },
{ "key": "ctrl+k ctrl+s",         "command": "workbench.action.openGlobalKeybindings" },
{ "key": "ctrl+,",                "command": "workbench.action.openGlobalSettings" },
{ "key": "alt+0",                 "command": "workbench.action.openLastEditorInGroup" },
{ "key": "ctrl+tab",              "command": "workbench.action.openNextRecentlyUsedEditorInGroup" },
{ "key": "ctrl+shift+tab",        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup" },
// { "key": "ctrl+r",                "command": "workbench.action.openRecent" },
{ "key": "ctrl+c",                "command": "problems.action.copy",
                                     "when": "problemFocus" },
{ "key": "ctrl+shift+u",          "command": "workbench.action.output.toggleOutput" },
{ "key": "ctrl+pageup",           "command": "workbench.action.previousEditor" },
{ "key": "ctrl+e",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+q",                "command": "workbench.action.quickOpenView" },
{ "key": "ctrl+shift+t",          "command": "workbench.action.reopenClosedEditor" },
{ "key": "ctrl+shift+h",          "command": "workbench.action.replaceInFiles" },
{ "key": "ctrl+shift+j",          "command": "workbench.action.search.toggleQueryDetails",
                                     "when": "searchViewletVisible" },
{ "key": "ctrl+k ctrl+t",         "command": "workbench.action.selectTheme" },
{ "key": "ctrl+k ctrl+p",         "command": "workbench.action.showAllEditors" },
{ "key": "ctrl+t",                "command": "workbench.action.showAllSymbols" },
{ "key": "f1",                    "command": "workbench.action.showCommands" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.showCommands" },
{ "key": "ctrl+\\",               "command": "workbench.action.splitEditor" },
{ "key": "ctrl+shift+b",          "command": "workbench.action.tasks.build" },
{ "key": "ctrl+c",                "command": "workbench.action.terminal.copySelection",
                                     "when": "terminalFocus && terminalTextSelected" },
{ "key": "ctrl+shift+`",          "command": "workbench.action.terminal.new" },
{ "key": "ctrl+shift+c",          "command": "workbench.action.terminal.openNativeConsole",
                                     "when": "!terminalFocus" },
{ "key": "ctrl+v",                "command": "workbench.action.terminal.paste",
                                     "when": "terminalFocus" },
{ "key": "ctrl+down",             "command": "workbench.action.terminal.scrollDown",
                                     "when": "terminalFocus" },
{ "key": "shift+pagedown",        "command": "workbench.action.terminal.scrollDownPage",
                                     "when": "terminalFocus" },
{ "key": "ctrl+end",              "command": "workbench.action.terminal.scrollToBottom",
                                     "when": "terminalFocus" },
{ "key": "ctrl+home",             "command": "workbench.action.terminal.scrollToTop",
                                     "when": "terminalFocus" },
{ "key": "ctrl+up",               "command": "workbench.action.terminal.scrollUp",
                                     "when": "terminalFocus" },
{ "key": "shift+pageup",          "command": "workbench.action.terminal.scrollUpPage",
                                     "when": "terminalFocus" },
{ "key": "ctrl+`",                "command": "workbench.action.terminal.toggleTerminal" },
{ "key": "shift+alt+1",           "command": "workbench.action.toggleEditorGroupLayout" },
{ "key": "f11",                   "command": "workbench.action.toggleFullScreen" },
{ "key": "ctrl+j",                "command": "workbench.action.togglePanel" },
{ "key": "ctrl+b",                "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+k z",              "command": "workbench.action.toggleZenMode" },
{ "key": "ctrl+numpad_add",       "command": "workbench.action.zoomIn" },
{ "key": "ctrl+shift+=",          "command": "workbench.action.zoomIn" },
{ "key": "ctrl+=",                "command": "workbench.action.zoomIn" },
{ "key": "ctrl+numpad_subtract",  "command": "workbench.action.zoomOut" },
{ "key": "ctrl+shift+-",          "command": "workbench.action.zoomOut" },
{ "key": "ctrl+-",                "command": "workbench.action.zoomOut" },
{ "key": "ctrl+numpad0",          "command": "workbench.action.zoomReset" },
{ "key": "ctrl+shift+m",          "command": "workbench.actions.view.problems" },
{ "key": "ctrl+shift+y",          "command": "workbench.debug.action.toggleRepl" },
{ "key": "ctrl+k ctrl+m",         "command": "workbench.extensions.action.showRecommendedKeymapExtensions" },
{ "key": "ctrl+k e",              "command": "workbench.files.action.focusOpenEditorsView" },
{ "key": "ctrl+shift+d",          "command": "workbench.view.debug" },
{ "key": "ctrl+shift+e",          "command": "workbench.view.explorer" },
{ "key": "ctrl+shift+x",          "command": "workbench.view.extensions" },
{ "key": "ctrl+shift+g",          "command": "workbench.view.scm" },
{ "key": "ctrl+shift+f",          "command": "workbench.view.search",
                                     "when": "!searchViewletVisible" },
{ "key": "f11",                   "command": "workbench.action.debug.stepInto",
                                     "when": "inDebugMode" },
{ "key": "ctrl+k",                "command": "workbench.action.terminal.clear",
                                     "when": "terminalFocus" },
{ "key": "f2",                    "command": "debug.renameWatchExpression",
                                     "when": "watchExpressionsFocused" },
{ "key": "f2",                    "command": "debug.setVariable",
                                     "when": "variablesFocused" },
{ "key": "space",                 "command": "debug.toggleBreakpoint",
                                     "when": "breakpointsFocused" },
{ "key": "shift+alt+c",           "command": "copyFilePath",
                                     "when": "explorerViewletFocus && explorerViewletVisible" },
{ "key": "shift+delete",          "command": "deleteFile",
                                     "when": "explorerViewletVisible && filesExplorerFocus" },
{ "key": "ctrl+enter",            "command": "explorer.openToSide",
                                     "when": "explorerViewletFocus && explorerViewletVisible" },
{ "key": "ctrl+c",                "command": "filesExplorer.copy",
                                     "when": "explorerViewletVisible && filesExplorerFocus" },
{ "key": "ctrl+v",                "command": "filesExplorer.paste",
                                     "when": "explorerViewletVisible && filesExplorerFocus" },
{ "key": "delete",                "command": "moveFileToTrash",
                                     "when": "explorerViewletVisible && filesExplorerFocus" },
{ "key": "f2",                    "command": "renameFile",
                                     "when": "explorerViewletVisible && filesExplorerFocus" },
{ "key": "shift+alt+r",           "command": "revealFileInOS",
                                     "when": "explorerViewletFocus && explorerViewletVisible" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+e",                "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+q",                "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+tab",              "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+e",          "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+q",          "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+shift+tab",        "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+f4",               "command": "extension.node-debug.pickLoadedScript",
                                     "when": "debugType == 'node2'" },
{ "key": "ctrl+f4",               "command": "extension.node-debug.pickLoadedScript",
                                     "when": "debugType == 'node'" },
{ "key": "ctrl+shift+v",          "command": "markdown.showPreview",
                                     "when": "editorFocus" },
{ "key": "ctrl+k v",              "command": "markdown.showPreviewToSide",
                                     "when": "editorFocus" },
// { "key": "ctrl+l l",              "command": "o.showOutput" },
{ "key": "shift+0",               "command": "acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && suggestionSupportsAcceptOnKey && editorLangId == 'csharp'" },
{ "key": "shift+9",               "command": "acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && suggestionSupportsAcceptOnKey && editorLangId == 'csharp'" },
{ "key": ".",                     "command": "acceptSelectedSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible && suggestionSupportsAcceptOnKey && editorLangId == 'csharp'" }
]


// Here are other available commands:
// - compositionEnd
// - compositionStart
// - cursorWordEndLeft
// - cursorWordEndLeftSelect
// - cursorWordLeft
// - cursorWordLeftSelect
// - cursorWordRight
// - cursorWordRightSelect
// - cursorWordStartRight
// - cursorWordStartRightSelect
// - cut
// - debug.addConfiguration
// - debug.installAdditionalDebuggers
// - debug.logToDebugConsole
// - default:compositionEnd
// - default:compositionStart
// - default:cut
// - default:paste
// - default:replacePreviousChar
// - default:type
// - deleteAllLeft
// - deleteAllRight
// - deleteWordEndLeft
// - deleteWordEndRight
// - deleteWordStartLeft
// - deleteWordStartRight
// - disablescmpreview
// - editor.action.addSelectionToPreviousFindMatch
// - editor.action.clearoutput
// - editor.action.clipboardCopyWithSyntaxHighlightingAction
// - editor.action.detectIndentation
// - editor.action.findReferences
// - editor.action.format
// - editor.action.goToTypeDefinition
// - editor.action.indentUsingSpaces
// - editor.action.indentUsingTabs
// - editor.action.indentationToSpaces
// - editor.action.indentationToTabs
// - editor.action.insertSnippet
// - editor.action.inspectTMScopes
// - editor.action.joinLines
// - editor.action.moveCarretLeftAction
// - editor.action.moveCarretRightAction
// - editor.action.moveSelectionToPreviousFindMatch
// - editor.action.openLink
// - editor.action.peekTypeDefinition
// - editor.action.reindentlines
// - editor.action.showSnippets
// - editor.action.sortLinesAscending
// - editor.action.sortLinesDescending
// - editor.action.toggleRenderControlCharacter
// - editor.action.toggleRenderWhitespace
// - editor.action.transformToLowercase
// - editor.action.transformToUppercase
// - editor.action.transpose
// - editor.action.transposeLetters
// - editor.debug.action.conditionalBreakpoint
// - editor.debug.action.runToCursor
// - editor.debug.action.selectionToRepl
// - editor.debug.action.selectionToWatch
// - editor.debug.action.toggleColumnBreakpointContextMenu
// - editor.emmet.action.balanceInward
// - editor.emmet.action.balanceOutward
// - editor.emmet.action.decrementNumberByOne
// - editor.emmet.action.decrementNumberByOneTenth
// - editor.emmet.action.decrementNumberByTen
// - editor.emmet.action.evaluateMath
// - editor.emmet.action.incrementNumberByOne
// - editor.emmet.action.incrementNumberByOneTenth
// - editor.emmet.action.incrementNumberByTen
// - editor.emmet.action.matchingPair
// - editor.emmet.action.mergeLines
// - editor.emmet.action.nextEditPoint
// - editor.emmet.action.previousEditPoint
// - editor.emmet.action.reflectCSSValue
// - editor.emmet.action.removeTag
// - editor.emmet.action.selectNextItem
// - editor.emmet.action.selectPreviousItem
// - editor.emmet.action.splitJoinTag
// - editor.emmet.action.toggleComment
// - editor.emmet.action.updateImageSize
// - editor.emmet.action.updateTag
// - editor.emmet.action.wrapWithAbbreviation
// - explorer.newFile
// - explorer.newFolder
// - filesExplorer.findInFolder
// - keybindings.editor.resetKeybinding
// - lineBreakInsert
// - paste
// - replacePreviousChar
// - scm.switch
// - setContext
// - type
// - update.showCurrentReleaseNotes
// - workbench.action.acceptSelectedQuickOpenItem
// - workbench.action.appPerf
// - workbench.action.clearEditorHistory
// - workbench.action.clearRecentFiles
// - workbench.action.closeEditorsInOtherGroups
// - workbench.action.closeEditorsToTheLeft
// - workbench.action.closeEditorsToTheRight
// - workbench.action.closeOtherEditors
// - workbench.action.closePanel
// - workbench.action.compareEditor.nextChange
// - workbench.action.compareEditor.previousChange
// - workbench.action.configureLanguageBasedSettings
// - workbench.action.configureLocale
// - workbench.action.debug.configure
// - workbench.action.debug.disconnect
// - workbench.action.debug.selectandstart
// - workbench.action.decreaseViewSize
// - workbench.action.editor.changeEOL
// - workbench.action.editor.changeEncoding
// - workbench.action.evenEditorWidths
// - workbench.action.files.newFile
// - workbench.action.files.newFolder
// - workbench.action.files.openFileInNewWindow
// - workbench.action.files.revert
// - workbench.action.files.saveFiles
// - workbench.action.focusActiveEditorGroup
// - workbench.action.focusPanel
// - workbench.action.focusQuickOpen
// - workbench.action.increaseViewSize
// - workbench.action.inspectKeyMappings
// - workbench.action.joinTwoGroups
// - workbench.action.maximizeEditor
// - workbench.action.minimizeOtherEditors
// - workbench.action.navigateDown
// - workbench.action.navigateEditorGroups
// - workbench.action.navigateLeft
// - workbench.action.navigateRight
// - workbench.action.navigateUp
// - workbench.action.nextEditorInGroup
// - workbench.action.openDocumentationUrl
// - workbench.action.openIntroductoryVideosUrl
// - workbench.action.openPreviousEditorFromHistory
// - workbench.action.openSnippets
// - workbench.action.openView
// - workbench.action.openWorkspaceSettings
// - workbench.action.previousEditorInGroup
// - workbench.action.quickOpenSelectNext
// - workbench.action.quickOpenSelectPrevious
// - workbench.action.quit
// - workbench.action.reloadWindow
// - workbench.action.removeFromEditorHistory
// - workbench.action.reportIssues
// - workbench.action.reportPerformanceIssue
// - workbench.action.revertAndCloseActiveEditor
// - workbench.action.selectIconTheme
// - workbench.action.showEditorsInFirstGroup
// - workbench.action.showEditorsInSecondGroup
// - workbench.action.showEditorsInThirdGroup
// - workbench.action.showEmmetCommands
// - workbench.action.showErrorsWarnings
// - workbench.action.showInteractivePlayground
// - workbench.action.showInterfaceOverview
// - workbench.action.showWelcomePage
// - workbench.action.switchWindow
// - workbench.action.tasks.configureTaskRunner
// - workbench.action.tasks.restartTask
// - workbench.action.tasks.runTask
// - workbench.action.tasks.showLog
// - workbench.action.tasks.terminate
// - workbench.action.tasks.test
// - workbench.action.terminal.focus
// - workbench.action.terminal.focusAtIndex1
// - workbench.action.terminal.focusAtIndex2
// - workbench.action.terminal.focusAtIndex3
// - workbench.action.terminal.focusAtIndex4
// - workbench.action.terminal.focusAtIndex5
// - workbench.action.terminal.focusAtIndex6
// - workbench.action.terminal.focusAtIndex7
// - workbench.action.terminal.focusAtIndex8
// - workbench.action.terminal.focusAtIndex9
// - workbench.action.terminal.focusNext
// - workbench.action.terminal.focusPrevious
// - workbench.action.terminal.kill
// - workbench.action.terminal.runActiveFile
// - workbench.action.terminal.runSelectedText
// - workbench.action.terminal.selectDefaultShell
// - workbench.action.toggleActivityBarVisibility
// - workbench.action.toggleDevTools
// - workbench.action.toggleMaximizedPanel
// - workbench.action.toggleMenuBar
// - workbench.action.toggleSharedProcess
// - workbench.action.toggleSidebarPosition
// - workbench.action.toggleStatusbarVisibility
// - workbench.customDebugRequest
// - workbench.debug.action.focusRepl
// - workbench.debug.panel.action.clearReplAction
// - workbench.debug.viewlet.action.addFunctionBreakpointAction
// - workbench.debug.viewlet.action.disableAllBreakpoints
// - workbench.debug.viewlet.action.enableAllBreakpoints
// - workbench.debug.viewlet.action.reapplyBreakpointsAction
// - workbench.debug.viewlet.action.removeAllBreakpoints
// - workbench.extensions.action.checkForUpdates
// - workbench.extensions.action.configureWorkspaceRecommendedExtensions
// - workbench.extensions.action.disableAll
// - workbench.extensions.action.disableAllWorkspace
// - workbench.extensions.action.enableAll
// - workbench.extensions.action.enableAllWorkspace
// - workbench.extensions.action.installExtensions
// - workbench.extensions.action.installVSIX
// - workbench.extensions.action.listOutdatedExtensions
// - workbench.extensions.action.openExtensionsFolder
// - workbench.extensions.action.showDisabledExtensions
// - workbench.extensions.action.showInstalledExtensions
// - workbench.extensions.action.showLanguageExtensions
// - workbench.extensions.action.showPopularExtensions
// - workbench.extensions.action.showRecommendedExtensions
// - workbench.extensions.action.showWorkspaceRecommendedExtensions
// - workbench.extensions.action.updateAllExtensions
// - workbench.files.action.collapseExplorerFolders
// - workbench.files.action.compareFileWith
// - workbench.files.action.focusFilesExplorer
// - workbench.files.action.refreshFilesExplorer
// - workbench.files.action.showActiveFileInExplorer
// - workbench.output.action.clearOutput
// - workbench.view.git